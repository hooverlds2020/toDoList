{"version":3,"sources":["components/Header.jsx","components/Todo.jsx","components/Loader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","handleFilter","className","onClick","Todo","title","status","handleCompleteTodo","id","Loader","App","useState","todoList","setTodoList","filtrado","setFiltrado","useEffect","handleTodoList","a","fetch","response","json","result","resultTodoList","slice","map","todo","completed","estado","filter","e","length","singleTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAkBeA,EAbA,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACf,OACE,mCACE,oBAAIC,UAAU,OAAd,uBACA,sBAAKA,UAAU,MAAf,UACE,wBAAQC,QAAS,kBAAIF,EAAa,QAAlC,iBACA,wBAAQE,QAAS,kBAAIF,EAAa,cAAlC,uBACA,wBAAQE,QAAS,kBAAIF,EAAa,UAAlC,gCCYOG,G,MAnBF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,mBAAoBC,EAAS,EAATA,GACjD,OACE,sBAAKN,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,SACE,6BAAKG,MAGP,qBAAKH,UAAU,eAAf,SACE,wBACEA,UAAWI,EAAS,WAAa,QACjCH,QAAS,kBAAMI,EAAmBC,IAFpC,SAIGF,EAAS,WAAa,iBCJlBG,G,MARA,WACb,OACE,qBAAKP,UAAU,SAAf,SACE,gDC0ESQ,G,MAxEH,WAEV,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAU,MAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KAKAC,qBAAU,WACR,IAAMC,EAAc,uCAAG,gCAAAC,EAAA,sEACEC,MACrB,8CAFmB,cACfC,EADe,gBAGAA,EAASC,OAHT,OAGfC,EAHe,OAIfC,EAAiBD,EAAOE,MAAM,EAAG,IAEvCX,EAAYU,GACZR,EAAYQ,GAPS,2CAAH,qDAUpBN,MAEC,IAIH,IAeMV,EAAqB,SAACC,GAC1BK,EAAYD,EAASa,KAAI,SAAAC,GAAI,OAAIA,EAAKlB,KAAOA,EAAZ,2BAAsBkB,GAAtB,IAA4BC,WAAYD,EAAKC,YAAcD,MAC5FX,EAAYD,EAASW,KAAI,SAAAC,GAAI,OAAIA,EAAKlB,KAAOA,EAAZ,2BAAsBkB,GAAtB,IAA4BC,WAAYD,EAAKC,YAAcD,OAK9F,OACE,sBAAKxB,UAAU,MAAf,UACE,cAAC,EAAD,CACAD,aAzBiB,SAAC2B,GACN,QAAXA,EACDb,EAAYH,GAEM,cAAXgB,EAEPb,EAAYH,EAASiB,QAAO,SAACC,GAAD,OAAuB,IAAhBA,EAAEH,cAElB,UAAXC,GACRb,EAAYH,EAASiB,QAAQ,SAACC,GAAD,OAAuB,IAAhBA,EAAEH,iBAmBtC,qBAAKzB,UAAU,iBAAf,SAEIY,GAAYA,EAASiB,OAAS,EAC9BjB,EAASW,KAAI,SAAAO,GAAU,OACrB,cAAC,EAAD,CAEE3B,MAAO2B,EAAW3B,MAClBG,GAAIwB,EAAWxB,GACfF,OAAQ0B,EAAWL,UACnBpB,mBAAoBA,GAJfyB,EAAWxB,OAOjB,cAAC,EAAD,WC/DEyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d656dc1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n//Estilos\r\nimport \"../styles/Header.css\";\r\n\r\nconst Header = ({handleFilter}) => {\r\n  return (\r\n    <header >\r\n      <h4 className=\"logo\">ToDo List</h4>\r\n      <div className=\"btn\">\r\n        <button onClick={()=>handleFilter(\"all\")}>All</button>\r\n        <button onClick={()=>handleFilter(\"completed\")}>Completas</button>\r\n        <button onClick={()=>handleFilter(\"reset\")}>Incompletas</button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\n//Styles\r\nimport \"../styles/Todo.css\";\r\n\r\nconst Todo = ({ title, status, handleCompleteTodo, id }) => {\r\n  return (\r\n    <div className=\"todo-card\">\r\n      <div className=\"todo-title\">\r\n        <h4>{title}</h4>\r\n      </div>\r\n\r\n      <div className=\"todo-actions\">\r\n        <button\r\n          className={status ? \"complete\" : \"reset\"}\r\n          onClick={() => handleCompleteTodo(id)}\r\n        >\r\n          {status ? \"Complete\" : \"Reset\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;","import React from \"react\";\r\n\r\n//Styles\r\nimport \"../styles/Loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <p>Cargando...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;","import React, { useState, useEffect } from \"react\";\n\n//Components\nimport Header from \"./components/Header\";\nimport Todo from \"./components/Todo\";\nimport Loader from \"./components/Loader\";\n\n//Styles\nimport \"./styles/App.css\";\n\nconst App = () => {\n  //STATE\n  const [todoList, setTodoList] = useState([]);\n  const [filtrado, setFiltrado] = useState (null);\n\n\n  //EFFECT\n\n  useEffect(() => {\n    const handleTodoList = async () => {\n      const response = await fetch(\n        \"https://jsonplaceholder.typicode.com/todos\")\n      const result = await response.json();\n      const resultTodoList = result.slice(0, 20);\n      // setTimeout(() => {\n      setTodoList(resultTodoList)\n      setFiltrado(resultTodoList)\n      // }, 2000);\n    };\n    handleTodoList();\n    \n  }, []);\n\n  //FUNCIONES\n\n  const handleFilter = (estado) => {\n    if(estado === \"all\"){\n      setFiltrado(todoList)\n\n    }else if(estado === \"completed\"){\n      \n      setFiltrado(todoList.filter((e) => e.completed === true))\n         \n    }else if (estado === \"reset\"){\n      setFiltrado(todoList.filter( (e) => e.completed === false))\n    }\n    \n  }\n \n  \n  const handleCompleteTodo = (id) => {\n    setTodoList(todoList.map(todo => todo.id === id ? { ...todo, completed: !todo.completed } : todo))\n    setFiltrado(filtrado.map(todo => todo.id === id ? { ...todo, completed: !todo.completed } : todo))\n  };\n\n\n \n  return (\n    <div className=\"App\">\n      <Header \n      handleFilter={handleFilter}\n      />\n\n      <div className=\"todo-container\">\n        {\n          filtrado && filtrado.length > 0 ? (\n          filtrado.map(singleTodo => (\n            <Todo\n              key={singleTodo.id}\n              title={singleTodo.title}\n              id={singleTodo.id}\n              status={singleTodo.completed}\n              handleCompleteTodo={handleCompleteTodo}\n            />\n          ))\n        ) : (<Loader />)\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}